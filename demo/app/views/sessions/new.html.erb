<div class="container mt-5">
  <div class="row justify-content-center">
    <div class="col-md-6">
      <div class="card shadow">
        <div class="card-body p-5">
          <h2 class="card-title text-center mb-4">登录</h2>

          <%= form_with(url: sign_in_path, class: "needs-validation", novalidate: true) do |form| %>
            <div class="form-floating mb-3">
              <%= form.text_field :login, 
                    class: "form-control",
                    required: true,
                    placeholder: "请输入账号" %>
              <%= form.label :login do %>
                <i class="bi bi-person-badge me-1"></i>用户名/邮箱/手机号
              <% end %>
              <div class="invalid-feedback">
                请输入账号
              </div>
            </div>

            <div class="form-floating mb-3">
              <%= form.password_field :password,
                    class: "form-control",
                    required: true,
                    placeholder: "请输入密码" %>
              <%= form.label :password do %>
                <i class="bi bi-key me-1"></i>密码
              <% end %>
              <div class="invalid-feedback">
                请输入密码
              </div>
            </div>

            <div class="d-grid gap-2">
              <%= form.submit "登录", class: "btn btn-primary btn-lg" %>
            </div>
          <% end %>

          <div class="text-center mt-4">
            <p class="text-muted">
              还没有账号？
              <%= link_to "立即注册", sign_up_path, class: "text-decoration-none" %>
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<% content_for :page_scripts do %>
<script>
(() => {
  'use strict'

  const forms = document.querySelectorAll('.needs-validation')

  const checkInputValidity = (input) => {
    const isValid = input.value && input.checkValidity()
    
    input.classList.toggle('is-valid', isValid)
    input.classList.toggle('is-invalid', !isValid)
    
    return isValid
  }

  Array.from(forms).forEach(form => {
    const inputs = form.querySelectorAll('input')

    inputs.forEach(input => {
      input.addEventListener('input', () => {
        checkInputValidity(input)
      })
      
      input.addEventListener('blur', () => {
        checkInputValidity(input)
      })
    })

    form.addEventListener('submit', event => {
      event.preventDefault()
      event.stopPropagation()

      const formData = new FormData(form)
      const loginData = {}
      formData.forEach((value, key) => {
        loginData[key] = value
      })

      fetch(form.action, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
        },
        body: JSON.stringify(loginData)
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          showToast({
            message: data.message,
            type: 'success',
            redirect: data.redirect_url,
            delay: 2000
          })
        } else {
          showToast({
            message: data.message,
            type: 'danger',
            delay: 3000
          })
        }
      })
      .catch(error => {
        showToast({
          message: "登录失败, 请稍后重试",
          type: 'error',
          delay: 3000
        })
      })

      form.classList.add('was-validated')
    }, false)
  })
})()
</script>
<% end %>
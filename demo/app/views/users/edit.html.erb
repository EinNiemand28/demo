<div class="container mt-5">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card shadow-sm">
        <div class="card-body">
          <h5 class="card-title mb-4">编辑个人资料</h5>

          <%= form_with(model: @user, multipart: true, data: { turbo: false }, class: "needs-validation") do |form| %>
            <div class="mb-4 text-center">
              <div class="avatar-preview mb-3">
                <%= image_tag @user.avatar.present? ? @user.avatar : "default_avatar.png",
                    class: "rounded-circle",
                    style: "width: 150px; height: 150px; object-fit: cover;",
                    id: "avatarPreview" %>
              </div>
              
              <div class="upload-button">
                <%= form.file_field :avatar,
                      class: "d-none",
                      accept: "image/jpeg,image/png",
                      data: { action: "change->preview#updateImage" } %>
                <%= form.label :avatar, class: "btn btn-outline-primary" do %>
                  <i class="bi bi-camera me-1"></i>更换头像
                <% end %>
              </div>
              
              <div class="form-text">
                支持 JPEG、PNG 格式，文件大小不超过 5MB
              </div>
            </div>

            <div class="mb-4">
              <h6 class="card-subtitle text-muted mb-3">基本信息</h6>
              <div class="form-floating mb-3">
                <%= form.text_field :username, class: "form-control", placeholder: "用户名" %>
                <%= form.label :username do %>
                  <i class="bi bi-person me-1"></i>用户名
                <% end %>
              </div>

              <div class="form-floating mb-3">
                <%= form.email_field :email, class: "form-control", placeholder: "邮箱" %>
                <%= form.label :email do %>
                  <i class="bi bi-envelope me-1"></i>邮箱
                <% end %>
              </div>

              <div class="form-floating mb-3">
                <%= form.telephone_field :phone, class: "form-control", placeholder: "手机号码" %>
                <%= form.label :phone do %>
                  <i class="bi bi-phone me-1"></i>手机号码
                <% end %>
              </div>
            </div>

            <div class="mb-4">
              <h6 class="card-subtitle text-muted mb-3">修改密码</h6>
              <%= link_to edit_password_path(@user), class: "btn btn-outline-primary" do %>
                <i class="bi bi-key me-1"></i>修改密码
              <% end %>
            </div>

            <div class="text-end">
              <%= link_to "取消", user_path(@user), class: "btn btn-light me-2" %>
              <%= form.submit "保存更改", class: "btn btn-primary" %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<% content_for :page_scripts do %>
<script>
(() => {
  'use strict'
  
  const avatarInput = document.querySelector('input[type="file"]')
  const avatarPreview = document.getElementById('avatarPreview')

  avatarInput.addEventListener('change', (event) => {
    const file = event.target.files[0]
    if (file) {
      if (file.size > 5 * 1024 * 1024) {
        showToast({
          message: '文件大小不能超过 5MB ',
          type: 'danger',
          delay: 3000
        })
        event.target.value = ''
        return
      }

      if (!['image/jpeg', 'image/png'].includes(file.type)) {
        showToast({
          message: '只支持 JPEG 或 PNG 格式',
          type: 'danger',
          delay: 3000
        })
        event.target.value = ''
        return
      }

      const reader = new FileReader()
      reader.onload = (e) => {
        avatarPreview.src = e.target.result
      }
      reader.readAsDataURL(file)
    }
  })

  const forms = document.querySelectorAll('.needs-validation')
  
  Array.from(forms).forEach(form => {
    form.addEventListener('submit', (event) => {
      event.preventDefault()
      event.stopPropagation()
      
      const formData = new FormData(form)
      // const userData = {}
      // formData.forEach((value, key) => {
      //   // 将 user[field] 转换为正确的嵌套格式
      //   const match = key.match(/user\[(.*?)\]/)
      //   if (match) {
      //     userData[match[1]] = value
      //   }
      // })

      fetch(form.action, {
        method: 'PATCH',
        headers: {
          // 'Content-Type': 'application/json',
          // 'Accept': 'application/json',
          'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
        },
        // body: JSON.stringify(userData)
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          showToast({
            message: data.message,
            type: 'success',
            redirect: data.redirect_url,
            delay: 1000
          })
        } else {
          showToast({
            message: data.message,
            type: 'danger',
            errors: data.errors,
            delay: 3000
          })
        }
      })
      .catch(error => {
        console.error('Error:', error)
        showToast({
          message: '系统错误, 请稍后重试',
          type: 'danger',
          delay: 3000
        })
      })
    }, false)
  })
  
})()
</script>
<% end %>
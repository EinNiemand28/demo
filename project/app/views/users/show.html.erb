<div class="container mt-5">
  <div class="row">
    <div class="col-md-4">
      <div class="card shadow-sm">
        <div class="card-body text-center">
          <div class="mb-3">
            <%= image_tag @user.avatar.present? ? @user.avatar : "default_avatar.png", 
                class: "rounded-circle", style: "width: 150px; height: 150px; object-fit: cover;" %>
          </div>
          <h5 class="card-title mb-2"><%= @user.username %></h5>
          <p class="text-muted mid mb-3">
            <span class="badge bg-<%= @user.admin? ? 'danger' : (@user.worker? ? 'warning' : 'info') %>">
              <%= t("roles.#{@user.role}") %>
            </span>
          </p>
          <% if Current&.user == @user %>
            <div class="btn-group" role="group">
              <%= link_to edit_user_path(@user), class: "btn btn-outline-primary btn-sm" do %>
                <i class="bi bi-pencil-square me-1"></i>编辑资料
              <% end %>
              <%= link_to edit_password_path(@user), class: "btn btn-outline-secondary btn-sm" do %>
                <i class="bi bi-key me-1"></i>修改密码
              <% end %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  
    <div class="col-md-8">
      <div class="card shadow-sm">
        <div class="card-body">
          <h5 class="card-title mb-4">个人信息</h5>
          
          <div class="row mb-3">
            <div class="col-sm-3 text-muted">用户名</div>
            <div class="col-sm-9"><%= @user.username %></div>
          </div>

          <div class="row mb-3">
            <div class="col-sm-3 text-muted">邮箱</div>
            <div class="col-sm-9">
              <%= @user.email.presence %>
            </div>
          </div>

          <div class="row mb-3">
            <div class="col-sm-3 text-muted">手机号码</div>
            <div class="col-sm-9">
              <%= @user.phone.presence %>
            </div>
          </div>

          <div class="row mb-3">
            <div class="col-sm-3 text-muted">注册时间</div>
            <div class="col-sm-9">
              <%= l @user.created_at, format: :long %>
            </div>
          </div>
        </div>
      </div>
    </div>

    <% if Current.user == @user && Current.user.buyer? %>
      <div class="card shadow-sm mt-4">
        <div class="card-body">
          <div class="d-flex justify-content-between align-items-center mb-4">
            <h5 class="card-title mb-0">
              <i class="bi bi-geo-alt me-2"></i>收货地址
            </h5>
            <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#newAddressModal">
              <i class="bi bi-plus-lg me-1"></i>新增地址
            </button>
          </div>

          <div id="addresses-list">
            <% @user.addresses.each do |address| %>
              <div class="card mb-3" id="address-<%= address.id %>">
                <div class="card-body">
                  <div class="row">
                    <div class="col-md-4">
                      <h6 class="mb-1">
                        <span class="text-primary">
                          <%= address.name %>
                        </span>
                        <span class="text-muted"><%= address.phone %></span>
                      </h6>
                      <p class="mb-1 text-muted small"><%= address.postcode %></p>
                      <% if address.is_default %>
                        <span class="badge bg-danger mt-2">默认地址</span>
                      <% end %>
                    </div>
                    
                    <div class="col-md-6">
                      <p class="mb-0 h-100 d-flex align-items-center">
                        <%= address.content %>
                      </p>
                    </div>
                    
                    <div class="col-md-2 text-end d-flex align-items-center">
                      <div class="btn-group">
                        <button type="button" 
                                class="btn btn-outline-primary btn-sm"
                                data-bs-toggle="modal"
                                data-bs-target="#editAddressModal"
                                data-address-id="<%= address.id %>">
                          <i class="bi bi-pencil"></i>
                        </button>
                        <button type="button" 
                                class="btn btn-outline-danger btn-sm"
                                data-action="delete-address"
                                data-address-id="<%= address.id %>">
                          <i class="bi bi-trash"></i>
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            <% end %>
          </div>
        </div>
      </div>

      <div class="modal fade" id="newAddressModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">新增收货地址</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
              <%= render 'addresses/form', address: Address.new %>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
              <button type="button" class="btn btn-primary" data-action="save-address">保存</button>
            </div>
          </div>
        </div>
      </div>

      <div class="modal fade" id="editAddressModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">编辑收货地址</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
              <div id="edit-address-form-container"></div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
              <button type="button" class="btn btn-primary" data-action="update-address">保存</button>
            </div>
          </div>
        </div>
      </div>
    <% end %>
  </div>
</div>

<% content_for :page_scripts do %>
<script>
document.addEventListener('DOMContentLoaded', () => {
  document.querySelector('[data-action="save-address"]')?.addEventListener('click', () => {
    const form = document.querySelector('#newAddressModal form')
    const formData = new FormData(form)
    
    fetch('/addresses', {
      method: 'POST',
      headers: {
        'Accept': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      },
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        showToast({
          message: data.message,
          type: 'success',
          delay: 1000
        })
        setTimeout(() => {
          window.location.reload()
        }, 1000)
      } else {
        showToast({
          message: data.message,
          type: 'danger',
          errors: data.errors,
          delay: 3000
        })
      }
    })
  })

  document.querySelectorAll('[data-bs-toggle="modal"][data-bs-target="#editAddressModal"]').forEach(button => {
    button.addEventListener('click', (e) => {
      const addressId = e.target.closest('button').dataset.addressId
      const addressCard = document.querySelector(`#address-${addressId}`)
      
      const formContainer = document.querySelector('#edit-address-form-container')
      const form = document.querySelector('#newAddressModal form').cloneNode(true)
      
      const name = addressCard.querySelector('span.text-primary').textContent.trim()
      const phone = addressCard.querySelector('span.text-muted').textContent.trim()
      const postcode = addressCard.querySelector('p.small').textContent.trim()
      const content = addressCard.querySelector('.col-md-6 p').textContent.trim()
      const isDefault = Boolean(addressCard.querySelector('.badge.bg-danger'))
      
      form.elements['address[name]'].value = name
      form.elements['address[phone]'].value = phone
      form.elements['address[postcode]'].value = postcode
      form.elements['address[content]'].value = content
      form.elements['address[is_default]'].checked = isDefault
      
      formContainer.innerHTML = ''
      formContainer.appendChild(form)
      
      document.querySelector('[data-action="update-address"]').dataset.addressId = addressId
    })
  })

  document.querySelector('[data-action="update-address"]')?.addEventListener('click', (e) => {
    const addressId = e.target.dataset.addressId
    const form = document.querySelector('#edit-address-form-container form')
    const formData = new FormData(form)
    
    fetch(`/addresses/${addressId}`, {
      method: 'PATCH',
      headers: {
        'Accept': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      },
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        showToast({
          message: data.message,
          type: 'success',
          delay: 500
        })
        setTimeout(() => {
          window.location.reload()
        }, 500)
      } else {
        showToast({
          message: data.message,
          type: 'danger',
          errors: data.errors,
          delay: 3000
        })
      }
    })
  })

  document.querySelectorAll('[data-action="delete-address"]').forEach(button => {
    button.addEventListener('click', (e) => {
      const addressId = e.target.closest('[data-action="delete-address"]').dataset.addressId
      
      if (confirm('确定要删除这个地址吗？')) {
        fetch(`/addresses/${addressId}`, {
          method: 'DELETE',
          headers: {
            'Accept': 'application/json',
            'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
          }
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            showToast({
              message: data.message,
              type: 'success',
              delay: 1000
            })
            setTimeout(() => {
              document.querySelector(`#address-${addressId}`).remove()
              if (document.querySelectorAll('.card').length === 0) {
                window.location.reload()
              }
            }, 1000)
          } else {
            showToast({
              message: data.message,
              type: 'danger',
              delay: 3000
            })
          }
        })
      }
    })
  })
})
</script>
<% end %>